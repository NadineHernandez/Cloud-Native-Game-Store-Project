openapi: 3.0.0
info:
  version: 0.0.1
  title: RetailApi
  description: Retail edge service for GameStore
  
servers: 
  - url: http://localhost:8181
    description: Local server - Retail API server
  - url: http://localhost:8761
    description: local server - Eureka server
  - url: http://localhost:9999
    description: local server - Config server
  - url: http://localhost:7001
    description: Local server - Level up server
  - url: http://localhost:7002
    description: Local server -   invoice server
  - url: http://localhost:7003
    description: Local server -   inventory service
paths:
  /invoices:
    post:
      summary: Create an invoice
      description: Creates an invoice 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetailInvoiceViewModel'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailInvoiceViewModel'
       
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                
    get:
        summary: Get all invoices
        description: Get list of all invoices
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RetailInvoiceViewModel'    
               
  /invoices/{id}:
    get:
      summary: Get invoice by id
      description: Queries for invoice by id
      parameters: 
        - name: id
          in: path
          required: true
          description: Invoice id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailInvoiceViewModel'
        
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                              
  /invoices/customer/{customer_id}:
    get:
      summary: Get invoice by customer id
      description: Queries for invoices by customer id
      parameters: 
        - name: customer_id
          in: path
          required: true
          description: Customer id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetailInvoiceViewModel'
     
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
  /products/{id}:
    get:
      summary: Get product by id
      description: single product by ID
      parameters: 
        - name: id
          in: path
          required: true
          description: Product id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductViewModel'
        
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                
  /products/inventory:
    get:
      summary: list of products available
      description: all products in inventory
      responses:
      
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductViewModel'
                
  /products/invoice/{invoiceid}:
    get:
      summary: list of products by invoice id
      description: an array of products
      parameters: 
        - name: invoiceid
          in: path
          required: true
          description: Invoice id
          schema:
            type: string
      responses:
      
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductViewModel'
  
  /levelup/customer/{customer_id}:
    get:
      summary: Get levelup points by customer id
      description: get customer total levelup points by customer id in path
      parameters:
        - name: customer_id
          in: path
          required: true
          description: Customer id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: integer
                
components:
  schemas:
    RetailInvoiceViewModel:
      type: object
      properties:
        invoiceId:
          type: integer
        customerId:
          type: integer
        purchaseDate:
          type: string
        itemsList:
          type: array
          items:
            type: object
        totalPrice:
          type: number
      required:
      - customerId
      - purchaseDate
      - itemsList
          
    ProductViewModel:
      type: object
      properties:
        productName:
          type: string
        productDescription:
          type: string
        listPrice:
          type: number
        unitPrice:
          type: number
